import numpy as np
import pandas as pd
import csv

#读所有工具的文件
#形成 所有x（t,v，label）的 csv文件  还没形成y值。
def read_feature():
    # 所有工具都要读一遍
    #定义写文件
    csvFile = open("data_processed/data_svm.csv", "w", newline='')  # 这样写 可行  避免空行
    writer = csv.writer(csvFile)
    #写文件的标题：
    writer.writerow(
        ["file", "bounded", "terminating", "simple", "tnont", "hard", "fpcalls", "fpargs", "cfgblocks",
         "maxindeg","SYNT_CONST", "CONST_ASSIGN", "COUNTER", "PURE_COUNTER", "LINEAR"
        , "PURE_LINEAR", "BOOL", "PURE_BOOLEAN", "COMPARED_TO_CONST", "MODE", "LOOP_IT"
         , "LOOP_BOUND", "ARRAY_INDEX","OFFSET", "ARRAY_SIZE", "FILE_DESCR", "INPUT", "BRANCH_COND",
         "BITVECTOR", "CHAR", "UNRES_DATA", "SCALAR_INT", "SCALAR_FLOAT","SCALAR", "PTR", "PTR_SCALAR"
            , "PTR_STRUCT", "PTR_STRUCT_PTR", "PTR_STRUCT_REC", "PTR_COMPL_STRUCT_REC", "HEAP_PTR", "THREAD_DESCR"
            , "USED_IN_ARITHM", "EXTERNAL_VAR"," RECURSIVE_FUNC", "STRUCT_FIELD","type", "tool_index","weight","label"])

    #长度50

    #给每个tool标num。
    dict = {'blast': 1, 'cbmc': 2, 'cpachecker': 3, 'cpalien': 4, 'cseq-lazy': 5, 'cseq-mu': 6, 'esbmc': 7, 'fbit': 8,
            'llbmc': 9, 'predator': 10, 'symbiotic': 11, 'threader': 12, 'ufo': 13, 'ultimateAutomizer': 14,
            'ultimateKojak': 15}
    #所有工具读label值
    tool =['blast', 'cbmc', 'cpachecker', 'cpalien', 'cseq-lazy', 'cseq-mu', 'esbmc', 'fbit',
            'llbmc', 'predator', 'symbiotic', 'threader', 'ufo', 'ultimateAutomizer',
            'ultimateKojak']

    #type  值先都默认为1。  后面修改在get_feature.py里改。  属于文件的特征。
    csv_reader = csv.reader(open('data_processed/loop_roles_metrics.csv'))  # 读loop_roles文件
    csv_reader1 = list(csv_reader)  #必须这样处理  要不然同一个地址。  这点可以总结学习。
    for i in range(15):
        #从0开始到14 看来和列表一一对应
        #读文件
        filename ='data_processed/'+tool[i] +'_new_normal_answers.txt'   #读label文件
        #print(filename)
        file = open(filename,'r')
        lines = file.readlines()  #形成answer列表。
        #下面应该是有两个for
        for line in lines:
            curLine = line.strip().split(' ')
            z=1
            for row in csv_reader1:
                if(curLine[0] in row[0] or curLine[0]==row[0]):
                    if(curLine[1]=='true'):
                        z = 1
                        weight = 1  #  要传值才能确定。
                        writer.writerow(
                        [curLine[0], row[2], row[3], row[4], row[5], row[6], row[7], row[8],
                         row[9],row[10], row[11], row[12], row[13], row[14], row[15], row[16],
                         row[17],row[18],row[19], row[20], row[21], row[22], row[23], row[24], row[25],
                         row[26], row[27],row[28], row[29], row[30], row[31], row[32], row[33],
                         row[34],row[35],row[36],row[37],row[38],row[39],row[40],row[41],row[42],row[43],
                         row[44], row[45],row[46],1,i+1,weight,z])
                    elif(curLine[1]=='false'):
                        z=3
                        weight=3
                        writer.writerow(
                            [curLine[0], row[2], row[3], row[4], row[5], row[6], row[7], row[8],
                             row[9], row[10], row[11], row[12], row[13], row[14], row[15], row[16],
                             row[17], row[18], row[19], row[20], row[21], row[22], row[23], row[24], row[25],
                             row[26], row[27], row[28], row[29], row[30], row[31], row[32], row[33],
                             row[34], row[35], row[36], row[37], row[38], row[39], row[40], row[41], row[42], row[43],
                             row[44], row[45], row[46], 1, i+1, weight,z])
                    else:
                        z =2
                        weight = 1.1
                        writer.writerow(
                            [curLine[0], row[2], row[3], row[4], row[5], row[6], row[7], row[8],
                             row[9], row[10], row[11], row[12], row[13], row[14], row[15], row[16],
                             row[17], row[18], row[19], row[20], row[21], row[22], row[23], row[24], row[25],
                             row[26], row[27], row[28], row[29], row[30], row[31], row[32], row[33],
                             row[34], row[35], row[36], row[37], row[38], row[39], row[40], row[41], row[42], row[43],
                             row[44], row[45], row[46], 1, i+1, weight,z])

                    break

        file.close()
    csvFile.close()


read_feature()
